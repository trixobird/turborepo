type Comment {
  body: String!
  id: ID!
  post: Post!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Message {
  createdAt: Date!
  id: ID!
  message: String!
}

type Mutation {
  createComment(body: String!, postId: String!): Comment!
  createMessage(message: String!, receiverId: String!): Message!
  createPost(description: String!, url: String!): Post!
  createVote(postId: String!): Vote!
  deleteMessage(id: String!): Message!
  login(email: String!, password: String!): SignUpDto!
  signup(email: String!, name: String!, password: String!): SignUpDto!
  updateMessage(id: String!, message: String!): Message!
  userTyping(receiverId: String!): Boolean!
}

type PageInfo {
  endCursor: ID
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: ID
}

type Post {
  comments: [Comment!]!
  createdAt: Date!
  description: String!
  id: ID!
  postedBy: User!
  url: String!
  votes: [Vote!]!
}

type Query {
  feed(after: ID, before: ID, first: Int, last: Int): QueryFeedConnection!
  info: String!
  me: User!
  messages: [Message!]!
  post(postId: String!): Post!
  votes(postId: String!): [Vote!]!
}

type QueryFeedConnection {
  edges: [QueryFeedConnectionEdge]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryFeedConnectionEdge {
  cursor: ID!
  node: Post!
}

type SignUpDto {
  token: String!
  user: User!
}

type Subscription {
  newMessage: [Message!]!
  newPost: Post!
  newVote: Vote!
  userTyping: Boolean!
}

type User {
  id: ID!
  name: String!
  posts: [Post!]!
  votes: [Vote!]!
}

type Vote {
  id: ID!
  post: Post!
  user: User!
}